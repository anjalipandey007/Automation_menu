import os
print("welcome")
print("where you want to run ?(local/remote)")

log=int(input("press 1: for local \n press 2: for remote"))
if(log==1):
	print("press 1: to run date \n press 2: to cal \n press 3: aws  \n press 4: to user create \n press 5: to setup hadoop \n press 6: to exit \n")

	print("enter your choice")



	option=int(input("please enter your choice"))
	if(option==1):
		os.system("date")
	elif(option==2):
		os.system("cal")
	elif(option==3):
        aid=input("enter Access ID")
		ak=input("enter Access key")
        region=input("enter region")
        zone=input("enter zone")
        os.system('aws ec2 create-key-pair --key-name "MyKeyPair" --query "keyMaterial" --output text >keypair.pem ')
        os.system('aws ec2 create-security-group --group-name kk --description "my security group"')
        print("press 1: for create ec2 \n press 2: to create volume")
        opt=int(input("enter your choice"))
        if(opt==1):
            os.system('aws ec2 run-instances --image-id ami-0e306788ff2473ccb --count 1 --instance-type t2.micro --key-name MyKeyPair --security-groups kk')
        elif(opt==2):
            os.system('aws ec2 create-volume --volume-type gp2 --size 10 --availability-zone ap-south-1a')
	elif(option==5):
		print("press 1: for setup as master \n press 2: for setup as slave")
		opt=int(input("enter your option here"))
		if(opt==1):
			f=open("/etc/hadoop/hdfs-site.xml","w")
			f.write('<?xml version="1.0"?>')
			f.write('<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>')
			f.write('<!-- Put site-specific property overrides in this file. -->')

			f.write('<configuration>')
			f.write('<property>')
			f.write('<name>dfs.name.dir</name>')
			f.write('<value>/new</value>')
			f.write('</property>')
			f.write('</configuration>')
			f.close()
		
			c=open('/etc/hadoop/core-site.xml',"w")
			c.write('<?xml version="1.0"?>')
			c.write('<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>')

			c.write('<!-- Put site-specific property overrides in this file. -->')

			c.write('<configuration>')
			c.write('<property>')
			c.write('<name>fs.default.name</name>')
			c.write('<value>hdfs://0.0.0.0:9001</value></property>')
			c.write('</configuration>')
            os.system('systemctl start hadoop')
            os.system('hadoop -daemon.sh start datanode')
		if(opt==2):
			masterip=int(input("enter master ip"))
            f=open("/etc/hadoop/hdfs-site.xml","w")
            f.write('<?xml version="1.0"?>')
            f.write('<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>')
            f.write('<!-- Put site-specific property overrides in this file. -->')
            f.write('<configuration>')
            f.write('<property>')
            f.write('<name>dfs.data.dir</name>')
            f.write('<value>/new</value>')
            f.write('</property>')
            f.write('</configuration>')
            f.close()

            c=open('/etc/hadoop/core-site.xml',"w")
            c.write('<?xml version="1.0"?>')
            c.write('<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>')

            c.write('<!-- Put site-specific property overrides in this file. -->')

            c.write('<configuration>')
            c.write('<property>')
            c.write('<name>fs.default.name</name>')
            c.write('<value>hdfs://{masterip}</value></property>')
            c.write('</configuration>')
            os.system('systemctl start hadoop')
            os.system('hadoop -daemon.sh start namenode')
	else:
		print("not supported")

elif(log==2):
	ip=input("enter IP for remote")
	print(ip)
	if(option==1):
		os.system("ssh {}date".format(ip))
else:
	print("not supported")
